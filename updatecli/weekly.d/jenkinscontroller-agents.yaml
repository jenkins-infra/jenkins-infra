---
name: Bump agent templates version on all controllers

scms:
  default:
    kind: github
    spec:
      user: "{{ .github.user }}"
      email: "{{ .github.email }}"
      owner: "{{ .github.owner }}"
      repository: "{{ .github.repository }}"
      token: "{{ requiredEnv .github.token }}"
      username: "{{ .github.username }}"
      branch: "{{ .github.branch }}"

sources:
  packerImageVersion:
    kind: githubrelease
    spec:
      owner: "jenkins-infra"
      repository: "packer-images"
      token: "{{ requiredEnv .github.token }}"
      username: "{{ .github.username }}"
  getLatestInboundAllInOneContainerImage:
    kind: dockerdigest
    spec:
      image: "jenkinsciinfra/jenkins-agent-ubuntu-20.04"
      tag: "latest"
      architecture: amd64
  getLatestInboundMaven8ContainerImage:
    kind: dockerdigest
    spec:
      image: "jenkinsciinfra/inbound-agent-maven"
      tag: "jdk8"
      architecture: amd64
  getLatestInboundMaven11ContainerImage:
    kind: dockerdigest
    spec:
      image: "jenkinsciinfra/inbound-agent-maven"
      tag: "jdk11"
      architecture: amd64
  getLatestInboundMaven17ContainerImage:
    kind: dockerdigest
    spec:
      image: "jenkinsciinfra/inbound-agent-maven"
      tag: "jdk17"
      architecture: amd64
  getLatestInboundMaven8WindowsContainerImage:
    kind: dockerdigest
    spec:
      image: "jenkinsciinfra/inbound-agent-maven"
      tag: "jdk8-nanoserver"
      architecture: amd64
  getLatestInboundMaven11WindowsContainerImage:
    kind: dockerdigest
    spec:
      image: "jenkinsciinfra/inbound-agent-maven"
      tag: "jdk11-nanoserver"
      architecture: amd64
  getLatestInboundMaven17WindowsContainerImage:
    kind: dockerdigest
    spec:
      image: "jenkinsciinfra/inbound-agent-maven"
      tag: "jdk17-nanoserver"
      architecture: amd64
  getLatestInboundMaven19WindowsContainerImage:
    kind: dockerdigest
    spec:
      image: "jenkinsciinfra/inbound-agent-maven"
      tag: "jdk19-nanoserver"
      architecture: amd64
  getLatestInboundWebBuilderContainerImage:
    kind: dockerdigest
    spec:
      image: "jenkinsciinfra/builder"
      tag: "latest"
      architecture: amd64
  getLatestInboundJDK11ContainerImage:
    kind: dockerdigest
    spec:
      image: "jenkins/inbound-agent"
      tag: "latest-jdk11"
      architecture: amd64
  getLatestUbuntuAgentAMIAmd64:
    kind: aws/ami
    dependson:
      - packerImageVersion
    spec:
      region: us-east-2
      sortby: creationDateDesc
      filters:
        - name: "name"
          values: "jenkins-agent-ubuntu-20.04-amd64-*"
        - name: "tag:build_type"
          values: "prod"
        - name: "tag:version"
          values: '{{ source "packerImageVersion" }}'
  getLatestWindows2019AgentAMIAmd64:
    kind: aws/ami
    dependson:
      - packerImageVersion
    spec:
      region: us-east-2
      sortby: creationDateDesc
      filters:
        - name: "name"
          values: "jenkins-agent-windows-2019-amd64-*"
        - name: "tag:build_type"
          values: "prod"
        - name: "tag:version"
          values: '{{ source "packerImageVersion" }}'
  getLatestWindows2022AgentAMIAmd64:
    kind: aws/ami
    dependson:
      - packerImageVersion
    spec:
      region: us-east-2
      sortby: creationDateDesc
      filters:
        - name: "name"
          values: "jenkins-agent-windows-2022-amd64-*"
        - name: "tag:build_type"
          values: "prod"
        - name: "tag:version"
          values: '{{ source "packerImageVersion" }}'
  getLatestUbuntuAgentAMIArm64:
    kind: aws/ami
    dependson:
      - packerImageVersion
    spec:
      region: us-east-2
      sortby: creationDateDesc
      filters:
        - name: "name"
          values: "jenkins-agent-ubuntu-20.04-arm64-*"
        - name: "tag:build_type"
          values: "prod"
        - name: "tag:version"
          values: '{{ source "packerImageVersion" }}'
  getWindowsVMAgentsDiskSize:
    kind: file
    dependson:
      - packerImageVersion
    spec:
      file: 'https://raw.githubusercontent.com/jenkins-infra/packer-images/{{ source `packerImageVersion` }}/locals.pkr.hcl'
      # matchpattern can only retrieve the full line. A transformer is required after to strip the unused content
      matchpattern: 'windows_disk_size_gb = (.*)'
    transformers:
      ## Retrieve only the integer (ignore whitespaces, comments, etc.)
      - findsubmatch:
          pattern: 'windows_disk_size_gb = (\d*)'
          captureindex: 1
targets:
  setWindowsVMAgentDiskSize:
    sourceid: getWindowsVMAgentsDiskSize
    name: "Change the Azure VM agents disk size"
    kind: yaml
    spec:
      file: hieradata/common.yaml
      key: "profile::jenkinscontroller::jcasc.agents_setup.windows.osDiskSize"
    scmid: default
  setAzureGalleryImageVersion:
    sourceid: packerImageVersion
    name: "Bump Azure Gallery Image Version"
    kind: yaml
    spec:
      file: hieradata/common.yaml
      key: "profile::jenkinscontroller::jcasc.agent_images.azure_vms_gallery_image.version"
    scmid: default
  setInboundAllInOneContainerImage:
    sourceid: getLatestInboundAllInOneContainerImage
    name: "Bump container agent image jenkinsciinfra/jenkins-agent-ubuntu-20.04 (AllInOne)"
    kind: yaml
    spec:
      file: hieradata/common.yaml
      key: "profile::jenkinscontroller::jcasc.agent_images.container_images.jnlp-maven-all-in-one"
    transformers:
      - addprefix: "jenkinsciinfra/jenkins-agent-ubuntu-20.04@"
    scmid: default
  setInboundWebBuilderContainerImage:
    sourceid: getLatestInboundWebBuilderContainerImage
    name: "Bump container agent image jenkinsciinfra/builder"
    kind: yaml
    spec:
      file: hieradata/common.yaml
      key: "profile::jenkinscontroller::jcasc.agent_images.container_images.jnlp-webbuilder"
    transformers:
      - addprefix: "jenkinsciinfra/builder@"
    scmid: default
  setInboundJDK11ContainerImage:
    sourceid: getLatestInboundJDK11ContainerImage
    name: "Bump container agent image jenkins/inbound-agent (JDK11)"
    kind: yaml
    spec:
      file: hieradata/common.yaml
      key: "profile::jenkinscontroller::jcasc.agent_images.container_images.jnlp"
    transformers:
      - addprefix: "jenkins/inbound-agent@"
    scmid: default
  setInboundJDK8WindowsContainerImage:
    sourceid: getLatestInboundMaven8WindowsContainerImage
    name: "Bump container agent image jenkinsciinfra/inbound-agent-maven (jdk8-nanoserver)"
    kind: yaml
    spec:
      file: hieradata/common.yaml
      key: "profile::jenkinscontroller::jcasc.agent_images.container_images.jnlp-maven-8-windows"
    transformers:
      - addprefix: "jenkinsciinfra/inbound-agent-maven:jdk8-nanoserver@"
    scmid: default
  setInboundJDK11WindowsContainerImage:
    sourceid: getLatestInboundMaven11WindowsContainerImage
    name: "Bump container agent image jenkinsciinfra/inbound-agent-maven (jdk11-nanoserver)"
    kind: yaml
    spec:
      file: hieradata/common.yaml
      key: "profile::jenkinscontroller::jcasc.agent_images.container_images.jnlp-maven-11-windows"
    transformers:
      - addprefix: "jenkinsciinfra/inbound-agent-maven:jdk11-nanoserver@"
    scmid: default
  setInboundJDK17WindowsContainerImage:
    sourceid: getLatestInboundMaven17WindowsContainerImage
    name: "Bump container agent image jenkinsciinfra/inbound-agent-maven (jdk17-nanoserver)"
    kind: yaml
    spec:
      file: hieradata/common.yaml
      key: "profile::jenkinscontroller::jcasc.agent_images.container_images.jnlp-maven-17-windows"
    transformers:
      - addprefix: "jenkinsciinfra/inbound-agent-maven:jdk17-nanoserver@"
    scmid: default
  setInboundJDK19WindowsContainerImage:
    sourceid: getLatestInboundMaven19WindowsContainerImage
    name: "Bump container agent image jenkinsciinfra/inbound-agent-maven (jdk19-nanoserver)"
    kind: yaml
    spec:
      file: hieradata/common.yaml
      key: "profile::jenkinscontroller::jcasc.agent_images.container_images.jnlp-maven-19-windows"
    transformers:
      - addprefix: "jenkinsciinfra/inbound-agent-maven:jdk19-nanoserver@"
    scmid: default
  setUbuntuAgentAMIAmd64:
    name: "Bump AMI ID for Ubuntu AMD64 agents"
    kind: yaml
    sourceid: getLatestUbuntuAgentAMIAmd64
    spec:
      file: hieradata/common.yaml
      key: 'profile::jenkinscontroller::jcasc.agent_images.ec2_amis.ubuntu-20\.04-amd64'
    scmid: default
  setUbuntuAgentAMIArm64:
    name: "Bump AMI ID for Ubuntu ARM64 agents"
    kind: yaml
    sourceid: getLatestUbuntuAgentAMIArm64
    spec:
      file: hieradata/common.yaml
      key: 'profile::jenkinscontroller::jcasc.agent_images.ec2_amis.ubuntu-20\.04-arm64'
    scmid: default
  setWindowsAgent2019AMIamd64:
    name: "Bump AMI ID for Windows 2019 AMD64 agents"
    kind: yaml
    sourceid: getLatestWindows2019AgentAMIAmd64
    spec:
      file: hieradata/common.yaml
      key: "profile::jenkinscontroller::jcasc.agent_images.ec2_amis.windows-2019-amd64"
    scmid: default
  setWindows2022AgentAMIamd64:
    name: "Bump AMI ID for Windows 2022 AMD64 agents"
    kind: yaml
    sourceid: getLatestWindows2022AgentAMIAmd64
    spec:
      file: hieradata/common.yaml
      key: "profile::jenkinscontroller::jcasc.agent_images.ec2_amis.windows-2022-amd64"
    scmid: default

actions:
  default:
    kind: github/pullrequest
    scmid: default
    title: Bump agent templates version on all controllers
    spec:
      labels:
        - dependencies
