---
title: Bump agent templates version on all controllers
sources:
  packerImageVersion:
    kind: githubRelease
    spec:
      owner: "jenkins-infra"
      repository: "packer-images"
      token: "{{ requiredEnv .github.token }}"
      username: "{{ .github.username }}"
  getLatestInboundRubyContainerImage:
    kind: dockerDigest
    spec:
      image: "jenkinsciinfra/inbound-agent-ruby"
      tag: "latest"
  getLatestInboundMaven8ContainerImage:
    kind: dockerDigest
    spec:
      image: "jenkinsciinfra/inbound-agent-maven"
      tag: "jdk8"
  getLatestInboundMaven11ContainerImage:
    kind: dockerDigest
    spec:
      image: "jenkinsciinfra/inbound-agent-maven"
      tag: "jdk11"
  getLatestInboundNodeContainerImage:
    kind: dockerDigest
    spec:
      image: "jenkinsciinfra/inbound-agent-node"
      tag: "latest"
  getLatestInboundAlpineContainerImage:
    kind: dockerDigest
    spec:
      image: "jenkins/inbound-agent"
      tag: "alpine"
  getLatestInboundJDK11ContainerImage:
    kind: dockerDigest
    spec:
      image: "jenkins/inbound-agent"
      tag: "latest-jdk11"
  getLatestUbuntuAgentAMIAmd64:
    kind: aws/ami
    depends_on:
      - packerImageVersion
    spec:
      region: us-east-2
      sortBy: creationDateAsc
      filters:
        - name: "name"
          values: "jenkins-agent-ubuntu-20-amd64-*"
        - name: "tag:build_type"
          values: "prod"
        - name: "tag:version"
          values: '{{ source "packerImageVersion" }}'
  getLatestWindowsAgentAMIAmd64:
    kind: aws/ami
    depends_on:
      - packerImageVersion
    spec:
      region: us-east-2
      sortBy: creationDateAsc
      filters:
        - name: "name"
          values: "jenkins-agent-windows-2019-amd64-*"
        - name: "tag:build_type"
          values: "prod"
        - name: "tag:version"
          values: '{{ source "packerImageVersion" }}'
  getLatestUbuntuAgentAMIArm64:
    kind: aws/ami
    depends_on:
      - packerImageVersion
    sortBy: creationDateAsc
    spec:
      region: us-east-2
      filters:
        - name: "name"
          values: "jenkins-agent-ubuntu-20-arm64-*"
        - name: "tag:build_type"
          values: "prod"
        - name: "tag:version"
          values: '{{ source "packerImageVersion" }}'

targets:
  setAzureGalleryImageVersion:
    sourceID: packerImageVersion
    name: "Bump Azure Gallery Image Version"
    kind: yaml
    spec:
      file: hieradata/common.yaml
      key: "profile::buildmaster::agent_images.azure_vms_gallery_image.version"
    scm:
      github:
        user: "{{ .github.user }}"
        email: "{{ .github.email }}"
        owner: "{{ .github.owner }}"
        repository: "{{ .github.repository }}"
        token: "{{ requiredEnv .github.token }}"
        username: "{{ .github.username }}"
        branch: "{{ .github.branch }}"
  setInboundRubyContainerImage:
    sourceID: getLatestInboundRubyContainerImage
    name: "Bump ci.jenkins.io container agent image jenkinsciinfra/inbound-agent-ruby"
    kind: yaml
    spec:
      file: hieradata/common.yaml
      key: "profile::buildmaster::agent_images.container_images.jnlp-ruby"
    transformers:
      - addPrefix: "jenkinsciinfra/inbound-agent-ruby@sha256:"
    scm:
      github:
        user: "{{ .github.user }}"
        email: "{{ .github.email }}"
        owner: "{{ .github.owner }}"
        repository: "{{ .github.repository }}"
        token: "{{ requiredEnv .github.token }}"
        username: "{{ .github.username }}"
        branch: "{{ .github.branch }}"
  setInboundMaven8ContainerImage:
    sourceID: getLatestInboundMaven8ContainerImage
    name: "Bump ci.jenkins.io container agent image jenkinsciinfra/inbound-agent-maven (JDK8)"
    kind: yaml
    spec:
      file: hieradata/common.yaml
      key: "profile::buildmaster::agent_images.container_images.jnlp-maven-8"
    transformers:
      - addPrefix: "jenkinsciinfra/inbound-agent-maven@sha256:"
    scm:
      github:
        user: "{{ .github.user }}"
        email: "{{ .github.email }}"
        owner: "{{ .github.owner }}"
        repository: "{{ .github.repository }}"
        token: "{{ requiredEnv .github.token }}"
        username: "{{ .github.username }}"
        branch: "{{ .github.branch }}"
  setInboundMaven11ContainerImage:
    sourceID: getLatestInboundMaven11ContainerImage
    name: "Bump ci.jenkins.io container agent image jenkinsciinfra/inbound-agent-maven (JDK11)"
    kind: yaml
    spec:
      file: hieradata/common.yaml
      key: "profile::buildmaster::agent_images.container_images.jnlp-maven-11"
    transformers:
      - addPrefix: "jenkinsciinfra/inbound-agent-maven@sha256:"
    scm:
      github:
        user: "{{ .github.user }}"
        email: "{{ .github.email }}"
        owner: "{{ .github.owner }}"
        repository: "{{ .github.repository }}"
        token: "{{ requiredEnv .github.token }}"
        username: "{{ .github.username }}"
        branch: "{{ .github.branch }}"
  setInboundNodeContainerImage:
    sourceID: getLatestInboundNodeContainerImage
    name: "Bump ci.jenkins.io container agent image jenkinsciinfra/inbound-agent-node"
    kind: yaml
    spec:
      file: hieradata/common.yaml
      key: "profile::buildmaster::agent_images.container_images.jnlp-node"
    transformers:
      - addPrefix: "jenkinsciinfra/inbound-agent-node@sha256:"
    scm:
      github:
        user: "{{ .github.user }}"
        email: "{{ .github.email }}"
        owner: "{{ .github.owner }}"
        repository: "{{ .github.repository }}"
        token: "{{ requiredEnv .github.token }}"
        username: "{{ .github.username }}"
        branch: "{{ .github.branch }}"
  setInboundAlpineContainerImage:
    sourceID: getLatestInboundAlpineContainerImage
    name: "Bump ci.jenkins.io container agent image jenkins/inbound-agent (Alpine)"
    kind: yaml
    spec:
      file: hieradata/common.yaml
      key: "profile::buildmaster::agent_images.container_images.jnlp-alpine"
    transformers:
      - addPrefix: "jenkins/inbound-agent@sha256:"
    scm:
      github:
        user: "{{ .github.user }}"
        email: "{{ .github.email }}"
        owner: "{{ .github.owner }}"
        repository: "{{ .github.repository }}"
        token: "{{ requiredEnv .github.token }}"
        username: "{{ .github.username }}"
        branch: "{{ .github.branch }}"
  setInboundJDK11ContainerImage:
    sourceID: getLatestInboundJDK11ContainerImage
    name: "Bump ci.jenkins.io container agent image jenkins/inbound-agent (JDK11)"
    kind: yaml
    spec:
      file: hieradata/common.yaml
      key: "profile::buildmaster::agent_images.container_images.jnlp"
    transformers:
      - addPrefix: "jenkins/inbound-agent@sha256:"
    scm:
      github:
        user: "{{ .github.user }}"
        email: "{{ .github.email }}"
        owner: "{{ .github.owner }}"
        repository: "{{ .github.repository }}"
        token: "{{ requiredEnv .github.token }}"
        username: "{{ .github.username }}"
        branch: "{{ .github.branch }}"
  setUbuntuAgentAMIAmd64:
    name: "Bump AMI ID for Ubuntu AMD64 agents"
    kind: yaml
    sourceID: getLatestUbuntuAgentAMIAmd64
    spec:
      file: hieradata/common.yaml
      key: "profile::buildmaster::agent_images.ec2_amis.ubuntu-amd64"
    scm:
      github:
        user: "{{ .github.user }}"
        email: "{{ .github.email }}"
        owner: "{{ .github.owner }}"
        repository: "{{ .github.repository }}"
        token: "{{ requiredEnv .github.token }}"
        username: "{{ .github.username }}"
        branch: "{{ .github.branch }}"
  setUbuntuAgentAMIArm64:
    name: "Bump AMI ID for Ubuntu ARM64 agents"
    kind: yaml
    sourceID: getLatestUbuntuAgentAMIArm64
    spec:
      file: hieradata/common.yaml
      key: "profile::buildmaster::agent_images.ec2_amis.ubuntu-arm64"
    scm:
      github:
        user: "{{ .github.user }}"
        email: "{{ .github.email }}"
        owner: "{{ .github.owner }}"
        repository: "{{ .github.repository }}"
        token: "{{ requiredEnv .github.token }}"
        username: "{{ .github.username }}"
        branch: "{{ .github.branch }}"
  setWindowsAgentAMIamd64:
    name: "Bump AMI ID for Windows AMD64 agents"
    kind: yaml
    sourceID: getLatestWindowsAgentAMIAmd64
    spec:
      file: hieradata/common.yaml
      key: "profile::buildmaster::agent_images.ec2_amis.windows-amd64"
    scm:
      github:
        user: "{{ .github.user }}"
        email: "{{ .github.email }}"
        owner: "{{ .github.owner }}"
        repository: "{{ .github.repository }}"
        token: "{{ requiredEnv .github.token }}"
        username: "{{ .github.username }}"
        branch: "{{ .github.branch }}"
