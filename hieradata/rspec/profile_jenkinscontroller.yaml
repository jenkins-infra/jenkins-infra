lookup_options:
  "^profile::jenkinscontroller::jcasc$":
    merge:
      strategy: deep
      merge_hash_arrays: true
profile::jenkinscontroller::ci_fqdn: 'jenkinscontroller.profile.rspec.test.local'
profile::jenkinscontroller::proxy_port: 443
profile::jenkinscontroller::letsencrypt: false
profile::jenkinscontroller::groovy_init_enabled: false
profile::jenkinscontroller::memory_limit: '14g'
profile::jenkinscontroller::jcasc:
  enabled: true
  reload_token: SuperSecretThatShouldBeEncryptedInProduction
  tools:
    groovy:
      groovy: # Default version is named "groovy"
        version: "2.4.7"
      jdk11:
        installers:
          linux-arm64:
            type: "zip"
            label: "linux && arm64"
            cpu_arch: "aarch64"
          s390x:
            type: "zip"
            label: "s390x"
            cpu_arch: "s390x"
  permanent_agents:
    s390x-agent:
      remoteFS: /home/jenkins/agent
      labels:
        - s390x
        - s390xdocker
      mode: EXCLUSIVE
      ssh:
        host: "148.100.113.105"
        credentialsId: "jenkins-s390x"
        hostKey: "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCYwX3Fu4fWEb9hPlan3FsiUsZoCsMD7CMqFNT/+Uh11HhvKU5ZFiF3sGNI7FrhNNbqBFd0HnS1t3zIkP3FFlKToSTrkcXPUyw+svFf5YbPbDxQUNE0kclTUsERzC3GNB5eXUlyNxCiGksqGtinXgknF2Z5cOO8osODP7ddRc6L3H4gvDi0/smz9QukZB2N0FqBJ3EZGbv0X9V3iwRu6Cu9lhcl/ue5fuIjKAgGzGQgWgCEg0k9xkK0OmxyJalI0eiqBRbdES/bXkkxp+4TQNOsxN/ZrZqxtlN7o9Fq9y+dp7xQFEoivSAjn6WQ6izjkMGKon7rcFJ4t4g6FJoQYv2Z"
      envVars:
        PATH+MAVEN: "/home/jenkins/tools/apache-maven-3.9.2/bin"
      toolLocation:
        - home: "/home/jenkins/tools/apache-maven-3.9.2"
          key: "hudson.tasks.Maven$MavenInstallation$DescriptorImpl@mvn"
  cloud_agents:
    kubernetes:
      cik8s:
        enabled: true
        provider: "aws"
        credentialsId: "cik8s-jenkins-agent-sa-token"
        serverCertificate: SuperSecretThatShouldBeEncryptedInProduction
        max_capacity: 120 # Max 50 workers (16 CPU / 32 G) with 3 pods (3*4 CPU / 3*8G) each, minus the 30 of doks
        url: SuperSecretThatShouldBeEncryptedInProduction
        agent_definitions:
          - name: jnlp-webbuilder
            agentJavaBin: java
            javaHome: /opt/jdk-17
            cpus: 2
            memory: 4
            labels:
              - node
              - webbuilder
              - ruby
            imagePullSecrets: dockerhub-credentials
    azure_vm_agents:
      clouds:
        azure-vms:
          azureCredentialsId: "azure-credentials"
          resourceGroup: ci-jenkins-io-ephemeral-agents
        azure-vms-jenkins-sponsorship:
          azureCredentialsId: "azure-jenkins-sponsorship-credentials" # Managed manually
          resourceGroup: ci-jenkins-io-ephemeral-agents
          maxInstances: 50 # Mandatory to set otherwise it's 10 by default. Worst case: 50 of 8 vCPUS = 400 which is the maximum quota
      agent_definitions:
        - name: "ubuntu-20"
          description: "Ubuntu 20.04 LTS"
          imageDefinition: jenkins-agent-ubuntu-20.04-amd64
          os: "ubuntu"
          os_version: "20.04"
          launcher: inbound
          storageAccount: SuperSecretThatShouldBeEncryptedInProduction
          location: "East US 2"
          instanceType: Standard_D4s_v3 # 4 vCPUS / 16 Gb
          architecture: amd64
          labels:
            - java
            - linux
            - docker
          maxInstances: 10
          useAsMuchAsPossible: true
          credentialsId: "jenkinsvmagents-userpass"
          usePrivateIP: true
          virtualNetworkName: "prod-jenkins-public-prod"
          virtualNetworkResourceGroupName: "prod-jenkins-public-prod"
          subnetName: "ci.j-agents-vm"
          spot: true
        - name: "win-2019" # The name must not contains "windows" or Azure API complains :facepalm:
          description: "Windows 2019"
          imageDefinition: jenkins-agent-windows-2019-amd64
          os: "windows"
          os_version: "2019"
          launcher: ssh
          storageAccount: SuperSecretThatShouldBeEncryptedInProduction
          location: "East US 2"
          instanceType: Standard_D4s_v3 # 4 vCPUS / 16 Gb
          architecture: amd64
          labels:
            - docker-windows
          maxInstances: 20
          useAsMuchAsPossible: true
          credentialsId: "jenkinsvmagents-userpass"
          usePrivateIP: true
          virtualNetworkName: "prod-jenkins-public-prod"
          virtualNetworkResourceGroupName: "prod-jenkins-public-prod"
          subnetName: "ci.j-agents-vm"
          spot: false
          agentDir: 'C:/Foo'
    azure-container-agents:
      aci-windows:
        credentialsId: "azure-credentials"
        resourceGroup: ci-jenkins-io-ephemeral-agents
        agent_definitions:
          - name: maven-11-windows
            os: windows
            command: 'pwsh.exe C:/ProgramData/Jenkins/jenkins-agent.ps1 -Url ^${rootUrl} -Secret ^${secret} -Name ^${nodeName}'
            cpus: 4
            memory: 8
            agentJavaBin: java # From image maven:3.8.6-eclipse-temurin-11
            labels:
              - maven-11-windows
  artifact_caching_proxy:
    disabled: false
# These are plugins we need in our ci environment
profile::jenkinscontroller::plugins:
  - azure-container-agents
  - azure-vm-agents
  - blueocean
  - cloudbees-folder
  - config-file-provider
  - configuration-as-code
  - credentials
  - credentials-binding
  - github-branch-source
  - kubernetes
  - ldap
  - matrix-auth
  - pipeline-graph-view
  - ssh-agent # SSH Agent to allow loading SSH credentials on a local agent for jobs
  - ssh-slaves # SSH Build Agent to implement "outbound agents"
  - toolenv
  - workflow-aggregator
  - workflow-multibranch
