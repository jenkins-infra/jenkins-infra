---
profile::robobutler::nick: hobobutler
profile::robobutler::password: ''

profile::buildmaster::docker_image: 'jenkins/jenkins'
profile::buildmaster::docker_tag: 'lts-jdk11'
profile::buildmaster::memory_limit: '1536m'

profile::buildmaster::jcasc:
  enabled: true
  common_configs:
    - buildmaster/casc/clouds.yaml.erb
  custom_configs:
    - cert.ci.jenkins.io/tools.yaml.erb # Instead of default
    - cert.ci.jenkins.io/global-libraries.yaml.erb # Instead of default
  reload_token: SuperSecretThatShouldBeEncryptedInProduction
profile::buildmaster::cloud_agents:
  kubernetes:
    cik8s:
      max_capacity: 100 # Max 50 workers (8 CPU / 32 G) with 2 pods (4 CPU / 8G) each
      url: https://SuperSecretThatShouldBeEncryptedInProduction
      agent_definitions:
        - name: jnlp-ruby
          cpus: 2
          memory: 4
          labels:
            - ruby
          imagePullSecrets: dockerhub-credential
        - name: jnlp-maven-8
          labels:
            - maven
            - maven-8
            - jdk8
          cpus: 4
          memory: 8
          imagePullSecrets: dockerhub-credential
        - name: jnlp-maven-11
          labels:
            - maven-11
            - jdk11
          cpus: 4
          memory: 8
          imagePullSecrets: dockerhub-credential
        - name: jnlp-maven-17
          labels:
            - maven-17
            - jdk17
          cpus: 4
          memory: 8
          imagePullSecrets: dockerhub-credential
        - name: jnlp-node
          cpus: 2
          memory: 4
          labels:
            - node
          imagePullSecrets: dockerhub-credential
        - name: jnlp-alpine
          cpus: 1
          memory: 2
          labels:
            - alpine
          imagePullSecrets: dockerhub-credential
        - name: jnlp
          labels:
            - default
          cpus: 1
          memory: 1
    doks:
      max_capacity: 150 # TODO: define correct values for Digital Ocean
      url: https://SuperSecretThatShouldBeEncryptedInProduction
      agent_definitions:
        - name: jnlp
          cpus: 2
          memory: 4
          labels:
            - test-doks
          #   - maven-11
          #   - jdk11
          imagePullSecrets: dockerhub-credential
  ec2:
    aws-us-east-2:
      region: us-east-2
      agent_definitions:
        - description: "Ubuntu 20.04 LTS"
          maxInstances: 5
          instanceType: T3Xlarge # 4 vCPUs / 16 Gb
          os: "ubuntu"
          architecture: "amd64"
          labels:
            - java
            - docker
            - linux
          useAsMuchAsPosible: true
          spot: true
        - description: "Windows 2019"
          maxInstances: 10
          instanceType: T3Xlarge # 4 vCPUs / 16 Gb
          os: "windows"
          architecture: "amd64"
          labels:
            - docker-windows
          useAsMuchAsPosible: true
          spot: true
          idleTerminationMinutes: 30
        - description: "High memory ubuntu 20.04 (ondemand)"
          maxInstances: 20
          instanceType: M54xlarge # 16 vCPUS / 64 Gb
          os: "ubuntu"
          architecture: "amd64"
          labels:
            - highmem
            - highram
            - docker-highmem
          useAsMuchAsPosible: false
          spot: false
        - description: "ARM64 ubuntu 20.04"
          maxInstances: 2
          instanceType: A1Xlarge # 4 vCPUs / 8 Gb
          os: "ubuntu"
          architecture: "arm64"
          labels:
            - arm64docker
            - linux
          useAsMuchAsPosible: false
          spot: true
  azure-vm-agents:
    resource_group: eastus-cijenkinsio
    agent_definitions:
      - name: "ubuntu-20"
        description: "Ubuntu 20.04 LTS"
        imageDefinition: jenkins-agent-ubuntu-20.04
        os: "ubuntu"
        storageAccount: SuperSecretThatShouldBeEncryptedInProduction
        location: "East US 2"
        instanceType: Standard_D4s_v3 # 4 vCPUS / 16 Gb
        architecture: amd64
        labels:
          - java
          - linux
          - docker
        maxInstances: 10
        useAsMuchAsPosible: true
        usePrivateIP: true
        virtualNetworkName: "prod-jenkins-public-prod"
        virtualNetworkResourceGroupName: "prod-jenkins-public-prod"
        subnetName: "ci.j-agents-vm"
        spot: true
      - name: "ubuntu-20-highmem"
        description: "Ubuntu 20.04 LTS Highmem"
        imageDefinition: jenkins-agent-ubuntu-20.04
        os: "ubuntu"
        storageAccount: SuperSecretThatShouldBeEncryptedInProduction
        location: "East US 2"
        instanceType: Standard_D16s_v3 # 16 vCPUS / 64 Gb
        architecture: amd64
        labels:
          - highmem
          - highram
          - docker-highmem
        idleTerminationMinutes: 5
        maxInstances: 10
        useAsMuchAsPosible: false
        usePrivateIP: false
      - name: "win-2019" # The name must not contains "windows" or Azure API complains :facepalm:
        description: "Windows 2019"
        imageDefinition: jenkins-agent-windows-2019
        os: "windows"
        storageAccount: SuperSecretThatShouldBeEncryptedInProduction
        location: "East US 2"
        instanceType: Standard_D4s_v3 # 4 vCPUS / 16 Gb
        architecture: amd64
        labels:
          - docker-windows
        idleTerminationMinutes: 30
        maxInstances: 10
        useAsMuchAsPosible: true
        useEphemeralOSDisk: false
        osDiskSize: 130 # For testing overriding at instance level in the template engine
  azure-container-agents:
    aci-windows:
      credentialsId: "azure-credentials"
      resource_group: eastus-cijenkinsio
      agent_definitions:
        - name: maven-8-windows
          os: windows
          command: 'pwsh.exe C:/ProgramData/Jenkins/jenkins-agent.ps1 -Url ^${rootUrl} -Secret ^${secret} -Name ^${nodeName}'
          cpus: 4
          memory: 8
          labels:
            - maven-windows
        - name: maven-11-windows
          os: windows
          command: 'pwsh.exe C:/ProgramData/Jenkins/jenkins-agent.ps1 -Url ^${rootUrl} -Secret ^${secret} -Name ^${nodeName}'
          cpus: 4
          memory: 8
          labels:
            - maven-11-windows
profile::buildmaster::default_tools:
  jdk:
    installations:
    - name: "jdk8"
      properties:
      - installSource:
          installers:
          - batchFile:
              command: "echo JDK8"
              label: "linux"
              toolHome: "/opt/jdk-8"
          - batchFile:
              command: "echo JDK8"
              label: "windows"
              toolHome: "C:\\Tools\\jdk-8"
          - zip:
              subdir: "jdk8u322-b06"
              url: "https://github.com/adoptium/temurin8-binaries/releases/download/jdk8u322-b06/OpenJDK8U-jdk_x64_linux_hotspot_8u322b06.tar.gz"
    - name: "jdk11"
      properties:
      - installSource:
          installers:
          - batchFile:
              command: "echo JDK11"
              label: "linux"
              toolHome: "/opt/jdk-11"
          - batchFile:
              command: "echo JDK11"
              label: "windows"
              toolHome: "C:\\Tools\\jdk-11"
          - zip:
              subdir: "jdk-11.0.14+9"
              url: "https://github.com/adoptium/temurin11-binaries/releases/download/jdk-11.0.14+9/OpenJDK11U-jdk_x64_linux_hotspot_11.0.14_9.tar.gz"
  groovy:
    groovy-3.0.6:
      version: "3.0.6"
  maven:
    maven-3.5:
      version: "3.5.4"
    maven-3.6:
      version: "3.6.3"
    maven-3.8:
      version: "3.8.1"
profile::buildmaster::plugins:
  - ansicolor
  - azure-container-agents
  - azure-vm-agents
  - blueocean
  - build-timeout
  - buildtriggerbadge
  - cloudbees-folder
  - code-coverage-api
  - configuration-as-code
  - credentials
  - credentials-binding
  - docker-workflow
  - ec2
  - embeddable-build-status
  - git-client
  - git
  - github
  - github-checks
  - github-branch-source
  - groovy
  - kubernetes
  - jobConfigHistory
  - ldap
  - lockable-resources
  - matrix-auth
  - parallel-test-executor
  - pipeline-stage-view
  - pipeline-utility-steps
  - ssh-agent
  - ssh-slaves # SSH Build Agent to implement "outbound agents"
  - throttle-concurrents
  - timestamper
  - toolenv
  - warnings-ng
  - workflow-aggregator
  - workflow-multibranch

docker::log_opt::max-size: '100m'
docker::log_opt::max-file: 2

accounts:
  atlassian:
    groups:
      - atlassian-admins

letsencrypt::config::server: "https://acme-staging.api.letsencrypt.org/directory"

ssl_legacy_key: |
  -----BEGIN RSA PRIVATE KEY-----
  MIICXAIBAAKBgQCw/CwMBPVJtUbvtJY7XxrwN0o5Bkus3U2E9AuZR7Ge4Ap5xQmh
  oEE2ZjBCKTKELtcwATvFZJD9R8kBqU6dVp8S0wd1rnZSBpUu7uGgal/ZFth4Qx8L
  S7zpRC3nNR3Wp4vSUwpQiYdaPy+g2s38eABdd1OmfAiVfwPyQFA6FgiuvQIDAQAB
  AoGAefTKxV2FSM1JnFPsUe0vOuhelPzpmKzGhh9E/tKQatInZdGI2X78cOfpyS1q
  Sfuc/M9cyKCL6HxW3nY0XecapVBYg+Cxz1UmqmnFkgyLvBNbJVrSL5QdHHcSkl8l
  Mw9e2oMnTI3+EGl2Gfxv54r2Ph0K10td49/5GUErgBpe5AECQQDgCKul1heoMCkd
  mPhbxziLvu/Hm88MEsMTEZTlaQDxQ18iwUZIi/X05TUp0qO/VFEBNS6jqW7aa5+Q
  oycP8ElhAkEAyjzwnpxrIC+aYZZRsulNDzVUHWoNdQ9pgz6kqC+4b3sj83X7wdn6
  WwiB/TRIj4HGyQ76sJIJrS7sRfvimisW3QJAOcICfr6zWqkP8JF/dinmaiDPsKZ6
  uqIbqM7flEV9+LVl0ZACjrGGt5xgGGg1zx3txGHxpEAKVEVq3d8yMunAAQJBAJRR
  nSa2ENrKDq8DT2enMpy0v7vSy4vOgdN/XcL7PIiGBxfGr5y8AKBC3RKWBaE5zFAo
  bDKS6AXbI+0vjkEC2QECQGfRo2BX8T/AJtuTgaqKe6fJa256sb2UBQ94gHTM+g3g
  9nkx0A60UEtCdY+Rv2DCgYxF3/S4cxKH7UQngwzs2KM=
  -----END RSA PRIVATE KEY-----

ssl_legacy_cert: |
  -----BEGIN CERTIFICATE-----
  MIICNTCCAZ4CCQCiU0dd09lCwzANBgkqhkiG9w0BAQsFADBfMQswCQYDVQQGEwJB
  VTETMBEGA1UECAwKU29tZS1TdGF0ZTEhMB8GA1UECgwYSW50ZXJuZXQgV2lkZ2l0
  cyBQdHkgTHRkMRgwFgYDVQQDDA9sZGFwLmplbmtpbnMuaW8wHhcNMTYwNDIyMTg0
  NzAwWhcNMTcwNDIyMTg0NzAwWjBfMQswCQYDVQQGEwJBVTETMBEGA1UECAwKU29t
  ZS1TdGF0ZTEhMB8GA1UECgwYSW50ZXJuZXQgV2lkZ2l0cyBQdHkgTHRkMRgwFgYD
  VQQDDA9sZGFwLmplbmtpbnMuaW8wgZ8wDQYJKoZIhvcNAQEBBQADgY0AMIGJAoGB
  ALD8LAwE9Um1Ru+0ljtfGvA3SjkGS6zdTYT0C5lHsZ7gCnnFCaGgQTZmMEIpMoQu
  1zABO8VkkP1HyQGpTp1WnxLTB3WudlIGlS7u4aBqX9kW2HhDHwtLvOlELec1Hdan
  i9JTClCJh1o/L6Dazfx4AF13U6Z8CJV/A/JAUDoWCK69AgMBAAEwDQYJKoZIhvcN
  AQELBQADgYEApCL0MOYHTNdyVFGE26KiadvxH0ZMg6nIUsrUnItg1WDDbfP1d0ZQ
  V2jdQ4Az32SGom/DVzkpwK7K/FrUqJInNAoTSnj2Brh8EklOW2rGygqXEHuRp0Jb
  u4DZf96/Ff36Ir0Inkdu+8EspUiRu+AwJvIn7elZSFm6dm9E8ouAWQI=
  -----END CERTIFICATE-----

ssl_legacy_chain: |
  -----BEGIN CERTIFICATE-----
  MIICNTCCAZ4CCQCiU0dd09lCwzANBgkqhkiG9w0BAQsFADBfMQswCQYDVQQGEwJB
  VTETMBEGA1UECAwKU29tZS1TdGF0ZTEhMB8GA1UECgwYSW50ZXJuZXQgV2lkZ2l0
  cyBQdHkgTHRkMRgwFgYDVQQDDA9sZGFwLmplbmtpbnMuaW8wHhcNMTYwNDIyMTg0
  NzAwWhcNMTcwNDIyMTg0NzAwWjBfMQswCQYDVQQGEwJBVTETMBEGA1UECAwKU29t
  ZS1TdGF0ZTEhMB8GA1UECgwYSW50ZXJuZXQgV2lkZ2l0cyBQdHkgTHRkMRgwFgYD
  VQQDDA9sZGFwLmplbmtpbnMuaW8wgZ8wDQYJKoZIhvcNAQEBBQADgY0AMIGJAoGB
  ALD8LAwE9Um1Ru+0ljtfGvA3SjkGS6zdTYT0C5lHsZ7gCnnFCaGgQTZmMEIpMoQu
  1zABO8VkkP1HyQGpTp1WnxLTB3WudlIGlS7u4aBqX9kW2HhDHwtLvOlELec1Hdan
  i9JTClCJh1o/L6Dazfx4AF13U6Z8CJV/A/JAUDoWCK69AgMBAAEwDQYJKoZIhvcN
  AQELBQADgYEApCL0MOYHTNdyVFGE26KiadvxH0ZMg6nIUsrUnItg1WDDbfP1d0ZQ
  V2jdQ4Az32SGom/DVzkpwK7K/FrUqJInNAoTSnj2Brh8EklOW2rGygqXEHuRp0Jb
  u4DZf96/Ff36Ir0Inkdu+8EspUiRu+AwJvIn7elZSFm6dm9E8ouAWQI=
  -----END CERTIFICATE-----

# vim: ft=yaml ts=2 sw=2 nowrap et
